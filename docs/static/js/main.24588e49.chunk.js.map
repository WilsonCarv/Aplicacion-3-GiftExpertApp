{"version":3,"sources":["componets/AddCategory.js","helpers/getGifts.js","componets/GiftGridItem.js","componets/GiftGrid.js","hooks/useFetchGifts.js","componets/GitApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getGifts","category","a","url","encodeURI","fetch","respuesta","json","data","gifts","map","img","id","title","images","downsized_medium","GiftGridItem","className","src","alt","GiftGrid","loading","state","setstate","useEffect","then","imgs","useFetchGits","key","GitApp","categories","ReactDOM","render","document","getElementById"],"mappings":"qMAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAERC,mBAAS,IAFD,mBAErCC,EAFqC,KAEzBC,EAFyB,KAc5C,OACI,0BAAMC,SATW,SAACC,GAClBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAS,IAC3BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAoBO,OACtCN,EAAc,OAMd,2BAAOO,KAAK,OACZC,MAAOT,EACPU,SAfkB,SAACP,GACvBF,EAAeE,EAAEQ,OAAOF,Y,uBCPnBG,EAAQ,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,0DAC4CC,UAAWH,GADvD,sDAEII,MAAOF,GAFX,cAEdG,EAFc,gBAGCA,EAAUC,OAHX,uBAGbC,EAHa,EAGbA,KAEDC,EAAQD,EAAKE,KAAI,SAAAC,GAAQ,IAAD,IAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,iBAAE,EAAYC,wBAAd,aAAE,EAA8BZ,QATvB,kBAYbM,GAZa,4CAAH,sDCERO,EAAe,SAAC,GAAqB,EAApBJ,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IACrC,OACI,yBAAKc,UAAU,0CACX,yBAAKC,IAAKf,EAAKgB,IAAKN,IACpB,2BAAIA,KCFHO,EAAW,SAAC,GAAgB,IAAfnB,EAAc,EAAdA,SAAc,ECDZ,SAACA,GAAY,IAAD,EACdd,mBACtB,CACIqB,KAAM,GACNa,SAAS,IAJuB,mBACjCC,EADiC,KAC1BC,EAD0B,KAiBpC,OAVDC,qBAAU,WACLxB,EAASC,GACRwB,MAAK,SAAAC,GACEH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAGvB,CAACpB,IAEIqB,EDfwBK,CAAa1B,GAAhCa,EADwB,EAC7BN,KAAaa,EADgB,EAChBA,QAEpB,OACI,oCACA,wBAAIJ,UAAU,qCAAqChB,GAClDoB,GAAW,sCACZ,yBAAKJ,UAAU,aAKPH,EAAOJ,KAAI,SAAAC,GAAG,OACV,kBAAC,EAAD,eACAiB,IAAKjB,EAAIC,IACLD,UEfXkB,EAAS,WAAM,MAGY1C,mBAAU,CAAC,cAHvB,mBAGjB2C,EAHiB,KAGL5C,EAHK,KAOxB,OACI,6BACI,6CACA,kBAAC,EAAD,CAAaA,cAAeA,IAC5B,6BAED,4BAES4C,EAAWpB,KAAI,SAACT,GAAD,OAChB,kBAAC,EAAD,CAAU2B,IAAK3B,EACdA,SAAUA,UCf9B8B,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.24588e49.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n\r\n    const [inputValue, setInputValue] = useState('');\r\n    const handleInputChange = (e)=> {\r\n        setInputValue( e.target.value);\r\n    }\r\n    const handleSubmit = (e) =>{\r\n        e.preventDefault();\r\n        if (inputValue.trim().length > 2) {\r\n            setCategories(cats => [ inputValue,...cats]);  \r\n            setInputValue('');          \r\n        }\r\n        \r\n    }\r\n    return (\r\n        <form onSubmit={handleSubmit}> \r\n            <input type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}></input>\r\n        </form>\r\n    )\r\n}\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifts = async (category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?limit=10&q=${ encodeURI( category)}&api_key=9o4qt3KKXF407UbsKq9tKwPcQkJgnR0p`;\r\n    const respuesta = await fetch (url);\r\n    const {data} = await respuesta.json();\r\n\r\n    const gifts = data.map(img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium?.url\r\n        }\r\n    })\r\n    return gifts;\r\n\r\n    \r\n}\r\n","import React from 'react'\r\n\r\nexport const GiftGridItem = ({id, title, url}) => {    \r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n            <img src={url} alt={title}></img>\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React  from 'react'\r\nimport { useFetchGits } from '../hooks/useFetchGifts';\r\nimport {GiftGridItem} from './GiftGridItem';\r\n\r\nexport const GiftGrid = ({category}) => {\r\n    const {data:images, loading} = useFetchGits(category);\r\n    \r\n    return (\r\n        <>\r\n        <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n        {loading && <p>Loading</p> }\r\n        <div className=\"card-grid\">\r\n           \r\n         \r\n            {\r\n                \r\n                images.map(img => (\r\n                    <GiftGridItem\r\n                    key={img.id} \r\n                    {...img}\r\n                    ></GiftGridItem>\r\n                    \r\n                ))\r\n            }\r\n        \r\n        </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifts } from \"../helpers/getGifts\";\r\n\r\nexport const useFetchGits = (category)=>{\r\nconst [state, setstate] = useState(\r\n    {\r\n        data: [],\r\n        loading: true\r\n    }\r\n);\r\n   useEffect(()=>{\r\n        getGifts(category)\r\n        .then(imgs=>{          \r\n                setstate({\r\n                    data:imgs,\r\n                    loading: false\r\n                })\r\n        })\r\n   }, [category])\r\n\r\n    return state\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './AddCategory';\r\nimport {GiftGrid} from './GiftGrid'\r\n\r\nexport const GitApp = () => {\r\n    //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n\r\n    const [categories, setCategories] = useState( ['One Punch']);\r\n    // const handleAdd =() => {\r\n    //     setCategories([...categories,'Naruto']);   \r\n    //}\r\n    return (\r\n        <div>\r\n            <h2>GiftExpertApp</h2>\r\n            <AddCategory setCategories={setCategories}></AddCategory>\r\n            <hr/>\r\n \r\n           <ol>\r\n            {\r\n                    categories.map((category) => (\r\n                   <GiftGrid key={category}\r\n                    category={category}></GiftGrid>              \r\n                   ))\r\n            }\r\n             \r\n           </ol>\r\n        </div>\r\n    )\r\n}\r\n           // {/* <button onClick={handleAdd}>Agregar</button> */}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport { GitApp } from './componets/GitApp';\n\n\nReactDOM.render(\n    <GitApp />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n\n"],"sourceRoot":""}